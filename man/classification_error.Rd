% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnostics.R
\name{classification_error}
\alias{classification_error}
\title{Classification diagnostics}
\usage{
classification_error(
  emulator,
  input_points,
  output_points,
  z,
  output_name,
  cutoff = 3,
  plt = T,
  ...
)
}
\arguments{
\item{emulator}{An \code{\link{Emulator}} object.}

\item{input_points}{A set of validation points.}

\item{output_points}{The outputs, \code{f(x)}, from the simulator.}

\item{z}{The observation to test implausibility against. Either as a single \code{numeric}, or as \code{list(val=numeric, sigma=numeric)}.}

\item{output_name}{Optional. A name for the output.}

\item{cutoff}{Optional. The cut-off for the implausibility measure.}

\item{plt}{Should a plot be shown (default: T).}

\item{...}{Dummy parameters (for compatibility with diagnostic wrapper)}
}
\value{
The set of points misclassified by the emulator.
}
\description{
Checks for emulator misclassifications.
}
\details{
Both the emulator implausibility and the simulator implausibility are computed, and
plotted against one another. Points for which the emulator implausibility is outside the desired
cut-off but for which the simulator implausibility is not are misclassification points,
and are highlighted in red.
}
\examples{
em <- emulator_from_data(GillespieSIR, output_names = c('nS', 'nI', 'nR'),
 ranges = list(aSI = c(0.1, 0.8), aIR = c(0, 0.5), aSR = c(0, 0.05)),
 quadratic = TRUE)[[1]]
target_value <- list(val = 281, sigma = 37.26)
classification_error(em, GillespieValidation[,1:3], GillespieValidation[,'nS'], target_value)
#> data.frame containing 0 points
}
