% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelbuilding.R
\name{emulator_from_data}
\alias{emulator_from_data}
\title{Generate Prior Emulators from Data}
\usage{
emulator_from_data(
  input_data,
  output_names,
  ranges,
  input_names = names(ranges),
  beta,
  u,
  c_lengths,
  funcs,
  bucov,
  deltas,
  ev,
  quadratic = FALSE,
  beta.var = FALSE
)
}
\arguments{
\item{input_data}{Required. A \code{data.frame} containing the input parameters and output values
from a set of simulator runs.}

\item{output_names}{Required. The list of outputs to emulate from \code{input_data}.}

\item{ranges}{A named list of parameter ranges.}

\item{input_names}{A list of input_names (if \code{ranges} is not provided).}

\item{beta}{Optional: specifications for the regression coefficients, given as a list
of lists \code{list(mu, sigma)} (a la \code{\link{Emulator}} specification).}

\item{u}{Optional: the correlation structure for each output, given as a list of
lists \code{list(mu, sigma, corr)}.}

\item{c_lengths}{Optional: a set of correlation lengths.}

\item{funcs}{Optional: basis functions for the regression surface.}

\item{bucov}{Optional: a list of functions giving the covariance between each of the beta
parameters and u(x).}

\item{deltas}{Optional: the nugget terms to include in u(x).}

\item{ev}{Optional. Used for determining nugget terms in absence on delta}

\item{quadratic}{Optional: should the regression surface be linear or quadratic? Default: F}

\item{beta.var}{Optional: should the beta coefficient be assumed to be known or should model variance be included?}
}
\value{
A list of objects of class \code{\link{Emulator}}.
}
\description{
Given data from a simulation, generates a set of \code{\link{Emulator}} objects based on
fitted values.
}
\details{
Many of the parameters that can be passed to this function are optional; the bare minimum
is \code{input_data}, \code{output_names}, and one of \code{ranges} or \code{input_names}.
If \code{ranges} is specified, then the input names are taken from that; if only
\code{input_names} is specified, then it is assumed that all input values in \code{input_data}
are already scaled to [-1, 1].

If the minimum information is provided, then a model is fitted as follows.

The basis functons and regression coefficients are generated using the \code{lm} function using
either only linear terms or up to quadratic terms (dependent on the value of \code{quadratic}),
performing stepwise add or delete as appropriate; in either event, the AIC criteria is used to
select the terms. The regression parameters thus derived are assumed to be known if
\code{beta.var=FALSE}, so that \code{beta$sigma = diag(0)}. Otherwise, the covariance matrix
for the parameters is taken from \code{vcov(model)}.

The correlation function c(x,x') is taken to be \code{\link{exp_sq}}; the correlation length is
chosen using the Durham heuristic: this states that the correlation length should lie within
[1/(n+1), 2/(n+1)] where n is the degree of the fitted surface (and the range of the parameter
is [-1,1]). Maximum likelihod estimation is then applied to this range to find an acceptable
correlation length, and the corresponding standard error is used as an estimate for the variance
of the correlation structure. The expectation E[u(x)] is assumed to be 0.

If delta terms are provided, then the nugget terms for each emulator are defined using these.
If they are not provided but a list of variabilities for each output are (in \code{ev}), then
a rough estimate of the nugget terms is performed and the emulators obtain these terms. If
neither is provided, the nugget terms are assumed to be identically zero for each emulator.

The covariance between beta and u(x) is assumed to vanish.
}
\examples{
 # Use the GillespieSIR dataset
 ranges <- list(aSI = c(0.1, 0.8), aIR = c(0, 0.5), aSR = c(0, 0.05))
 out_vars <- c('nS', 'nI', 'nR')
 ems_linear <- emulator_from_data(GillespieSIR, output_names = out_vars,
  ranges = ranges)
 ems_linear # Printout of the key information

 ems <- emulator_from_data(GillespieSIR, output_names = out_vars,
  ranges = ranges, quadratic = TRUE)
 ems # Now includes quadratic terms (but only where they're warranted)

 ems2 <- emulator_from_data(GillespieSIR, output_names = out_vars,
  ranges = ranges, c_lengths = c(0.55, 0.6, 0.59),
  deltas = c(0.1, 0.2, 0.2), quadratic = TRUE)
 ems2 # Broadly the same, but with the correlation structure modified.

 ems2_beta <- emulator_from_data(GillespieSIR, output_names = out_vars,
  ranges = ranges, c_lengths = c(0.55, 0.6, 0.59),
  deltas = c(0.1, 0.2, 0.2), quadratic = TRUE, beta.var = TRUE)
}
