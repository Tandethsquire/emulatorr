% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnostics.R
\name{standard_errors}
\alias{standard_errors}
\title{Emulator Standard Errors}
\usage{
standard_errors(emulator, input_points, output_points, output_name, plt = T)
}
\arguments{
\item{emulator}{An \code{\link{Emulator}} object.}

\item{input_points}{A set of validation points.}

\item{output_points}{The outputs, \code{f(x)}, from the simulator.}

\item{output_name}{Optional. A name for the output.}

\item{plt}{Should a plot be shown (default: T).}
}
\value{
A list of standard errors.
}
\description{
Finds and plots emulator standard errors.
For an emulator of a simulator function \code{f(x)}, and a validation data set \code{X},
finds the standard errors in the form \code{(f(x)-E[f(x)])/sqrt(Var[f(x)])},
where \code{E[f(x)]} is the emulator expectation, and \code{Var[f(x)]} is the emulator variance,
at each point \code{x} in \code{X}.
}
\examples{
    out_vars <- c("nS", "nI", "nR")
    ranges <- list(aSI = c(0.1,0.8), aIR = c(0,0.5), aSR = c(0,0.05))
    base_emulators <- emulator_from_data(GillespieSIR, names(ranges),
     out_vars, ranges = ranges)
    trained_emulators <- purrr::map(seq_along(base_emulators),
     ~base_emulators[[.x]]$bayes_adjust(GillespieSIR[,names(ranges)],
      GillespieSIR[,out_vars[[.x]]]))
    standard_errors(trained_emulators[[1]], GillespieValidation[,names(ranges)],
     GillespieValidation[,'nS'], "nS")
}
