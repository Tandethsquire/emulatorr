% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{emulator_plot}
\alias{emulator_plot}
\title{Plot Emulator Outputs}
\usage{
emulator_plot(em, var_name = "exp", npoints = 40, targets = NULL, ...)
}
\arguments{
\item{em}{A single \code{\link{Emulator}} object, or a list thereof}

\item{var_name}{The output to plot: options are described above}

\item{npoints}{The number of lattice points per input direction}

\item{targets}{The observations. Required if plotting implausibility}

\item{...}{Any optional parameters for \code{\link{nth_implausible}}}
}
\value{
A ggplot object.
}
\description{
A wrapper for plotting emulator outputs, for two dimensions. If the input space is greater
than 2-dimensional, the mid-range values are chosen for any input beyond the first two.
If a list of k emulators are given (e.g. those derived from \code{\link{emulator_from_data}}
or \code{\link{full_wave}}), then the result is a kx2 grid of plots. If a single emulator is
given, then a single plot is returned.
}
\details{
Options for plotting variables are passed via the \code{var} parameter: current choices are
\code{'exp'} (Expectation), \code{'var'} (Variance), \code{'imp'} (Implausibility), and
\code{'maximp'} (n-th maximum Implausibility). If either of the implausibilities are desired,
the \code{targets} parameter must not be \code{NULL}. Bear in mind that n-th maximum
implausibility is only permitted if a list of emulators is provided: the \code{...}
parameters that can be passed to this function are for optional parameters that can be
passed to the \code{\link{nth_implausible}} function (for example, which level of
maximum implausibility is wanted).
}
\examples{
 ranges <- list(aSI = c(0.1, 0.8), aIR = c(0, 0.5), aSR = c(0, 0.05))
 targets <- list(
  list(val = 281, sigma = 10.43),
  list(val = 30, sigma = 11.16),
  list(val = 689, sigma = 14.32)
 )
 outputs <- c('nS','nI','nR')
 ems <- emulator_from_data(GillespieSIR, outputs, ranges, deltas=rep(0.1, 3), quadratic = TRUE)
 t_ems <- purrr::map(seq_along(ems), ~ems[[.]]$adjust(GillespieSIR, outputs[[.]]))
 names(t_ems) <- outputs
 emulator_plot(t_ems$nI)
 emulator_plot(t_ems, var_name = 'var', npoints = 20)
 emulator_plot(t_ems, var_name = 'imp', targets = targets, npoints = 20)
}
