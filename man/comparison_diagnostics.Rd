% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnostics.R
\name{comparison_diagnostics}
\alias{comparison_diagnostics}
\title{Emulator Diagnostic Plot}
\usage{
comparison_diagnostics(
  emulator,
  input_points,
  output_points,
  sd = 3,
  output_name,
  plt = T
)
}
\arguments{
\item{emulator}{An \code{\link{Emulator}} object.}

\item{input_points}{A set of validation points.}

\item{output_points}{The outputs, \code{f(x)}, from the simulator.}

\item{sd}{Numeric: the allowed number of standard deviations (default: 3).}

\item{output_name}{Optional. A name for the output.}

\item{plt}{Should a plot be shown (default: T).}
}
\value{
A list of points whose emulator value is outside the allowed standard deviation.
}
\description{
Produces a diagnostic plot of emulator output.
The emulator output \code{E[f(x)]} is plotted against the simulator output \code{f(x)},
with error bars given by the emulator standard deviation \code{sqrt(3*Var[f(x)])},
for each point \code{x} in a validation set \code{X}. Points whose emulator expectation
lies outside 3-sigma of the simulator output are shown in red, and those input points
are returned.
}
\examples{
    out_vars <- c("nS", "nI", "nR")
    ranges <- list(aSI = c(0.1,0.8), aIR = c(0,0.5), aSR = c(0,0.05))
    base_emulators <- emulator_from_data(GillespieSIR, names(ranges),
     out_vars, ranges = ranges)
    trained_emulators <- purrr::map(seq_along(base_emulators),
    ~base_emulators[[.x]]$bayes_adjust(
     GillespieSIR[,names(ranges)], GillespieSIR[,out_vars[[.x]]]))
    comparison_diagnostics(trained_emulators[[1]], GillespieValidation[,names(ranges)],
     GillespieValidation[,'nS'],output_name = 'nS')
}
